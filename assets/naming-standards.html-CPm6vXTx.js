import{_ as s,c as n,e as a,o as l}from"./app-OBUVoyLF.js";const i={};function t(d,e){return l(),n("div",null,e[0]||(e[0]=[a(`<h2 id="_1-项目命名规范" tabindex="-1"><a class="header-anchor" href="#_1-项目命名规范"><span>1. 项目命名规范</span></a></h2><ul><li>统一采用 <strong>kebab-case</strong> 命名约定，即字母小写并以短横线分隔单词。</li></ul><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">// good</span>
<span class="line">project-name</span>
<span class="line">// bad</span>
<span class="line">project_name | ProjectName</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-目录命名规范" tabindex="-1"><a class="header-anchor" href="#_2-目录命名规范"><span>2. 目录命名规范</span></a></h2><ul><li>统一采用 <strong>kebab-case</strong> 命名约定。</li><li>对于涉及复数的名称，应使用<strong>复数形式</strong>，缩写时不需要加复数。</li></ul><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">// good</span>
<span class="line">scripts | styles | components | images | assets | views | utils | layout | img | api | router</span>
<span class="line">// bad</span>
<span class="line">script | style | component | util | imgs | apis | routers</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-文件命名规范" tabindex="-1"><a class="header-anchor" href="#_3-文件命名规范"><span>3. 文件命名规范</span></a></h2><ul><li>统一采用 <strong>kebab-case</strong> 命名约定。</li></ul><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">// good</span>
<span class="line">simple-upload.vue | my-module.js | index.css | home-banner.png</span>
<span class="line">// bad</span>
<span class="line">simpleUpload.vue | SimpleUpload.vue | simple_upload.vue | MyModule.js | Index.css | homeBanner.png</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-编码命名规范" tabindex="-1"><a class="header-anchor" href="#_4-编码命名规范"><span>4. 编码命名规范</span></a></h2><h3 id="_4-1-变量命名" tabindex="-1"><a class="header-anchor" href="#_4-1-变量命名"><span>4.1 变量命名</span></a></h3><ul><li><strong>变量名</strong>：使用有意义的名称描述变量的用途，统一采用 <strong>camelCase</strong> (除第一个单词外的每个单词的首字母大写，而其他字母均为小写)命名约定。</li></ul><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">// good</span>
<span class="line">userProfile | isValidInput</span>
<span class="line">// bad</span>
<span class="line">user_profire | isvalidinput</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>常量名</strong>：统一采用<strong>全大写字母</strong>，使用<strong>下划线分隔单词</strong>。</li></ul><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">// good</span>
<span class="line">MAX_SIZE | API_BASE_URL</span>
<span class="line">// bad</span>
<span class="line">Max_Size | ApiBaseUrl</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-函数命名" tabindex="-1"><a class="header-anchor" href="#_4-2-函数命名"><span>4.2 函数命名</span></a></h3><ul><li>使用描述性的动词或动词短语，统一采用 <strong>camelCase</strong> 命名约定。</li></ul><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">// good</span>
<span class="line">calculateAge | getUserProfile</span>
<span class="line">// bad</span>
<span class="line">calculate_age | get_userProfile</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-类命名" tabindex="-1"><a class="header-anchor" href="#_4-3-类命名"><span>4.3 类命名</span></a></h3><ul><li>统一采用 <strong>PascalCase</strong>（首字母大写的驼峰命名法）命名约定。</li></ul><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">// good</span>
<span class="line">UserManager | HttpRequest</span>
<span class="line">// bad</span>
<span class="line">userManager | http_request</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-命名严谨性" tabindex="-1"><a class="header-anchor" href="#_5-命名严谨性"><span>5. 命名严谨性</span></a></h2><ul><li>命名严禁拼音和英文混合方式，更不允许直接使用中文。</li><li>地名或者国际通用名称，可以视同英文。</li><li>使用有意义且规范的缩写，避免望文不知义。</li></ul>`,23)]))}const c=s(i,[["render",t],["__file","naming-standards.html.vue"]]),p=JSON.parse('{"path":"/blogs/technology/naming-standards.html","title":"命名规范","lang":"en-US","frontmatter":{"title":"命名规范","date":"2024-04-25","categories":["技术文档"],"tags":["命名规范"],"author":"Alan","publish":true},"headers":[{"level":2,"title":"1. 项目命名规范","slug":"_1-项目命名规范","link":"#_1-项目命名规范","children":[]},{"level":2,"title":"2. 目录命名规范","slug":"_2-目录命名规范","link":"#_2-目录命名规范","children":[]},{"level":2,"title":"3. 文件命名规范","slug":"_3-文件命名规范","link":"#_3-文件命名规范","children":[]},{"level":2,"title":"4. 编码命名规范","slug":"_4-编码命名规范","link":"#_4-编码命名规范","children":[{"level":3,"title":"4.1 变量命名","slug":"_4-1-变量命名","link":"#_4-1-变量命名","children":[]},{"level":3,"title":"4.2 函数命名","slug":"_4-2-函数命名","link":"#_4-2-函数命名","children":[]},{"level":3,"title":"4.3 类命名","slug":"_4-3-类命名","link":"#_4-3-类命名","children":[]}]},{"level":2,"title":"5. 命名严谨性","slug":"_5-命名严谨性","link":"#_5-命名严谨性","children":[]}],"git":{"createdTime":1754455154000,"updatedTime":1754459054000,"contributors":[{"name":"yanhui","email":"yhalxh@163.com","commits":3}]},"filePathRelative":"blogs/technology/naming-standards.md"}');export{c as comp,p as data};
