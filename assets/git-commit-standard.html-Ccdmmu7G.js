import{_ as s,c as t,b as d,a as e,d as a,e as n,r,o as c}from"./app-Bk2wEOlk.js";const o={},u={href:"https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#-git-commit-guidelines",target:"_blank",rel:"noopener noreferrer"},p={start:"2"},h={href:"https://www.conventionalcommits.org/zh-hans/v1.0.0/",target:"_blank",rel:"noopener noreferrer"};function m(g,l){const i=r("ExternalLinkIcon");return c(),t("div",null,[l[2]||(l[2]=d(`<h2 id="_1-概述" tabindex="-1"><a class="header-anchor" href="#_1-概述"><span>1. 概述</span></a></h2><p>本文档旨在规范团队在使用 Git 进行代码提交时的操作规范，确保代码库中的每个提交都遵循良好的提交规范，提高代码的可读性和可维护性，以便更好地管理代码版本和协作开发。</p><h2 id="_2-提交消息格式" tabindex="-1"><a class="header-anchor" href="#_2-提交消息格式"><span>2. 提交消息格式</span></a></h2><h3 id="_2-1-提交消息结构" tabindex="-1"><a class="header-anchor" href="#_2-1-提交消息结构"><span>2.1 提交消息结构</span></a></h3><p>提交消息应当包括三个部分：<strong>标题、空行、正文</strong>。 具体格式为：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;</span>
<span class="line">&lt;BLANK LINE&gt;</span>
<span class="line">&lt;body&gt;</span>
<span class="line">&lt;BLANK LINE&gt;</span>
<span class="line">&lt;footer&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-提交消息部分说明" tabindex="-1"><a class="header-anchor" href="#_2-2-提交消息部分说明"><span>2.2 提交消息部分说明</span></a></h3><ul><li><code>&lt;type&gt;</code>: 表示提交的类型，例如 feat（新功能）、fix（修复 bug）、docs（文档修改）等。</li><li><code>&lt;scope&gt;</code>: 可选，表示影响的范围，通常指模块、文件名、数据层、控制层、视图层等。</li><li><code>&lt;subject&gt;</code>: 提交的简要描述。 <ul><li>一般不超过 50 个字符</li><li>建议使用中文或简单的英语描述</li><li>使用陈述语句</li><li>首字母不需要大写</li><li>结尾不加句号或其他标点符号</li></ul></li><li><code>&lt;body&gt;</code>: 可选，提交的详细描述。</li><li><code>&lt;footer&gt;</code>: 可选，包括一些备注信息，比如关联的 Issue 编号。</li></ul><h2 id="_3-提交类型规范" tabindex="-1"><a class="header-anchor" href="#_3-提交类型规范"><span>3. 提交类型规范</span></a></h2><p>通过定义标准的提交类型，以便标识代码变更的目的。 常用的提交类型包括：</p><ul><li><code>feat</code>：新功能</li><li><code>fix</code>：修复 bug</li><li><code>docs</code>：修改文档</li><li><code>style</code>：代码格式调整</li><li><code>refactor</code>：重构代码（即不是新增功能，也不是修改 bug 的代码变动）</li><li><code>perf</code>：提升性能、体验的代码更改</li><li><code>test</code>：增加或修改测试</li><li><code>build</code>：修改项目构建或打包相关的配置、脚本</li><li><code>ci</code>：持续集成</li><li><code>chore</code>：构建过程或辅助工具的变动</li><li><code>revert</code>：撤回提交</li><li><code>wip</code>：开发中</li><li><code>workflow</code>：工作流程改进</li><li><code>types</code>：类型修改</li><li><code>release</code>：版本发布相关的改动</li><li><code>merge</code>：代码合并</li><li><code>sync</code>：同步主线或分支的 Bug</li></ul><h2 id="_4-提交示例" tabindex="-1"><a class="header-anchor" href="#_4-提交示例"><span>4. 提交示例</span></a></h2><p>尽量将每个提交都分离成独立的提交，确保每次提交的内容清晰且无重复，且避免修改同一文件多次提交，以提高代码的可读性和可维护性。</p><ul><li>新功能</li></ul><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">feat(user): 添加重置密码功能</span>
<span class="line">feat(user): add reset password feature</span>
<span class="line">···</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>修复 Bug</li></ul><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">fix(user): 用户查询缺少 username 属性</span>
<span class="line">fix(auth): 修复用户登录失败的问题</span>
<span class="line">···</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>构建/辅助工具变动</li></ul><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">chore(build): 更新构建脚本版本为 3.1.0</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_5-提交规范的好处" tabindex="-1"><a class="header-anchor" href="#_5-提交规范的好处"><span>5. 提交规范的好处</span></a></h2><ul><li>使提交信息更具可读性和标准化</li><li>便于通过提交信息快速了解代码变更的目的</li><li>提高团队协作效率，减少沟通成本</li></ul><h2 id="_6-reference" tabindex="-1"><a class="header-anchor" href="#_6-reference"><span>6. Reference</span></a></h2>`,22)),e("ul",null,[e("li",null,[e("ol",null,[e("li",null,[e("a",u,[l[0]||(l[0]=a(" Angular 规范 ")),n(i)])])])]),e("li",null,[e("ol",p,[e("li",null,[e("a",h,[l[1]||(l[1]=a(" 约定式提交 ")),n(i)])])])])])])}const b=s(o,[["render",m]]),_=JSON.parse('{"path":"/blogs/technology/git-commit-standard.html","title":"Git Commit 提交规范","lang":"en-US","frontmatter":{"title":"Git Commit 提交规范","date":"2024-04-24","categories":["技术文档"],"tags":["Git Commit"],"author":"Alan","publish":true},"headers":[{"level":2,"title":"1. 概述","slug":"_1-概述","link":"#_1-概述","children":[]},{"level":2,"title":"2. 提交消息格式","slug":"_2-提交消息格式","link":"#_2-提交消息格式","children":[{"level":3,"title":"2.1 提交消息结构","slug":"_2-1-提交消息结构","link":"#_2-1-提交消息结构","children":[]},{"level":3,"title":"2.2 提交消息部分说明","slug":"_2-2-提交消息部分说明","link":"#_2-2-提交消息部分说明","children":[]}]},{"level":2,"title":"3. 提交类型规范","slug":"_3-提交类型规范","link":"#_3-提交类型规范","children":[]},{"level":2,"title":"4. 提交示例","slug":"_4-提交示例","link":"#_4-提交示例","children":[]},{"level":2,"title":"5. 提交规范的好处","slug":"_5-提交规范的好处","link":"#_5-提交规范的好处","children":[]},{"level":2,"title":"6. Reference","slug":"_6-reference","link":"#_6-reference","children":[]}],"git":{"createdTime":1744358690000,"updatedTime":1744358690000,"contributors":[{"name":"yanhui","email":"yhawsm@163.com","commits":1}]},"filePathRelative":"blogs/technology/git-commit-standard.md"}');export{b as comp,_ as data};
