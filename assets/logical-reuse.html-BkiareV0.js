import{_ as r,c as i,a as n,b as t,d as o,e as s,o as a,r as p}from"./app-OBUVoyLF.js";const d={},h={href:"http://git.yzwill.cn/yz-web/zmc",target:"_blank",rel:"noopener noreferrer"},u={href:"http://git.yzwill.cn/yz-web/new-h5",target:"_blank",rel:"noopener noreferrer"},m={href:"http://git.yzwill.cn/yz-web/app-web",target:"_blank",rel:"noopener noreferrer"},g={href:"http://git.yzwill.cn/yz-web/market-project",target:"_blank",rel:"noopener noreferrer"},c={href:"https://mp.weixin.qq.com/acct/findacct?action=scan&token=&lang=zh_CN",target:"_blank",rel:"noopener noreferrer"};function w(b,e){const l=p("ExternalLinkIcon");return a(),i("div",null,[e[14]||(e[14]=n("p",null,"在日常的业务开发过程中，经常遇到大量具有相似逻辑和结构的业务需求。如果每次都通过复制粘贴旧代码的方式来实现新功能，不仅会导致代码库臃肿、难以维护，还会浪费大量的时间和精力。为了提高开发效率、增强代码可维护性并减少重复劳动，我们应该注重抽象通用组件设计可复用的业务逻辑。 接下来，将列举一些常用的业务场景，用来记录和方便参考引用~",-1)),e[15]||(e[15]=n("h2",{id:"一、相关代码仓库说明",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#一、相关代码仓库说明"},[n("span",null,"一、相关代码仓库说明")])],-1)),e[16]||(e[16]=n("p",null,"目前关于远智移动端、公众号相关项目分别是：",-1)),n("ul",null,[n("li",null,[n("a",h,[e[0]||(e[0]=t("zmc")),o(l)]),e[1]||(e[1]=t(": 微信公众号相关"))]),n("li",null,[n("a",u,[e[2]||(e[2]=t("new-h5")),o(l)]),e[3]||(e[3]=t(": 基于 zmc 项目分离的，体量相对较轻的仓库，新业务基本上在此仓库上开发"))]),n("li",null,[n("a",m,[e[4]||(e[4]=t("app-web")),o(l)]),e[5]||(e[5]=t(": 用于远智 APP 中内嵌访问 web 移动端页面的业务开发"))]),n("li",null,[n("a",g,[e[6]||(e[6]=t("market-project")),o(l)]),e[7]||(e[7]=t(": 微信小程序（学历助手），小程序相关的业务开发"))])]),e[17]||(e[17]=n("h2",{id:"二、app-客户端跳转微信小程序",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#二、app-客户端跳转微信小程序"},[n("span",null,"二、APP 客户端跳转微信小程序")])],-1)),e[18]||(e[18]=n("p",null,[t("最近在做训练营二期有个需求是需要在 APP 端的闯关页面，打开微信小程序展示跟进老师信息，用来给学员提供二维码添加老师的需求，就是需要在 APP 上跳转到微信小程序展示。 基于这个需求，对跳转的规则和参数进行整理说明： "),n("code",null,"wxmini://yzwill.cn?userName=gh_5586b77a4611&path=/pages/other/trainingCampTeacher/index&type=2")],-1)),n("ul",null,[e[11]||(e[11]=n("li",null,[n("code",null,"wxmini://yzwill.cn"),t(" ：APP 约定的协议；")],-1)),n("li",null,[e[9]||(e[9]=t("userName：对应着小程序的原始 ID；(如果不清楚原始 ID 对应的小程序，可以通过")),n("a",c,[e[8]||(e[8]=t("找回账号")),o(l)]),e[10]||(e[10]=t("的方式进行查询)"))]),e[12]||(e[12]=n("li",null,"path：对应小程序中的访问页面",-1)),e[13]||(e[13]=n("li",null,"type: 对应小程序的环境（0：正式版、1：开发版、2：体验版）",-1))]),e[19]||(e[19]=s('<blockquote><p>注意：如果小程序的访问页面需要传递参数，需要对参数进行 encodeURIComponent 编码，同时注意携带多个参数时，&amp; 符号后的参数会被 app 端跳转前获取，并不会传递给小程序。 如：wxmini://yzwill.cn?userName=gh_5586b77a4611&amp;path=/pages/other/trainingCampTeacher/index？id=xx&amp;trainType=xx&amp;type=2。传递到小程序页面就只有 id 的参数。</p></blockquote><h2 id="二、app-客户端跳转微信小程序-访问-h5-页面" tabindex="-1"><a class="header-anchor" href="#二、app-客户端跳转微信小程序-访问-h5-页面"><span>二、APP 客户端跳转微信小程序，访问 H5 页面</span></a></h2><p>同样也是上面训练营二期的需求，分析可以知道，需求只是想从 APP 端跳转到微信小程序，<strong>利用微信端的能力</strong>，对企微二维码的图片进行识别，添加对应的跟进老师的功能。按照常规的开发思路，就是直接到小程序上进行开发，但分析这个需求，也可以通过 h5 页面实现，同样也可以长按图片识别二维码进行添加，这样就可以<strong>避免小程序的发布、审核流程和大小限制等问题</strong>，通过统一微信小程序的 web-view H5 入口页面，后续类似的需求也可以直接开发 h5 即可。</p><blockquote><p>为啥不直接使用 APP 内嵌 H5 页面？因为需要使用到微信中图片长按识别添加二维码的能力。 为啥不直接使用 APP 跳转 H5 页面？不支持直接跳转微信 APP 打开 web 页面。 当然如果业务允许的情况下，这个需求还可以采取直接在 APP 端提示用户保存图片，自行到微信端识别简化开发。但多开发一步能提高用户体验何乐而不为~</p></blockquote><p><code>wxmini://yzwill.cn?userName=gh_5586b77a4611&amp;path=/pages/other/webview?url=encodeURIComponent(https://192-pre.yzou.cn/new-h5/newPages/training-camp/index?token=xxx&amp;id=xxx)&amp;type=2</code></p><p>链接的规则同上。这里给小程序端新增了一个页面 <code>/pages/other/webview</code>，页面接受 <code>url</code> 的参数，会进行 decodeURIComponent 处理，然后使用 web-view 进行页面访问。 总结：如果 APP 端需要使用到微信端的能力，微信 H5 端页支持这些能力，且不依赖微信小程序的业务，则推荐使用这种方式进行开发。</p><h2 id="三、h5-页面纯图片展示临时通知信息" tabindex="-1"><a class="header-anchor" href="#三、h5-页面纯图片展示临时通知信息"><span>三、H5 页面纯图片展示临时通知信息</span></a></h2><p>APP 客户端有些情况下，需要用到图片用作中转页，如版本更新后旧版本需要升级提示，可以通过访问内嵌 H5 链接访问展示图片。 也是一样的套路，在 new-h5 仓库中新增一个页面 <code>/new-h5/newPages/image-notice/index?url=encodeURIComponent(xxx)</code> ，接受 <code>url</code> 图片资源路径的参数，页面使用图片居中展示。</p><p>如: <code>https://192-pre.yzou.cn/new-h5/newPages/image-notice/index?url=https%3A%2F%2Fstatic.yzou.cn%2Fapplet%2Ftraining-camp-update-tip.png</code></p><p>有类似需求，直接替换文件资源地址即可。</p><h2 id="四、oss-图片资源管理" tabindex="-1"><a class="header-anchor" href="#四、oss-图片资源管理"><span>四、OSS：图片资源管理</span></a></h2><p>在上述提到的项目仓库中，许多图片资源使用了 OSS 服务。然而，项目中存在多个资源访问路径，并且有些路径是直接固定的，这种方式不利于维护。推荐使用环境变量文件中定义的变量，并通过全局 filters 中的 <code>imgBaseURL</code> 方法来拼接路径，以提高代码的可读性和可维护性，同时避免迭代开发时影响原有线上的资源文件。 此外，项目中通常直接使用 OSS 的域名路径。建议使用自定义域名，以便在某个 OSS 服务资源节点出现故障时，可以快速修改域名指向其他正常的备份 OSS 资源服务节点，实现容灾效果。</p><p>目前前端常用的 oss 文件路径和域名映射关系：</p><table><thead><tr><th>路径</th><th>域名</th></tr></thead><tbody><tr><td>oss://yzims</td><td>static.yzou.cn、yzims.oss-cn-shenzhen.aliyuncs.com</td></tr><tr><td>oss://yzimstest</td><td>img.yzwill.cn、yzimstest.oss-cn-shenzhen.aliyuncs.com</td></tr><tr><td>oss://new-yzpres</td><td>img2.yzwill.cn、new-yzpres.oss-cn-shenzhen.aliyuncs.com</td></tr></tbody></table><h2 id="" tabindex="-1"><a class="header-anchor" href="#"><span>...</span></a></h2>',15))])}const y=r(d,[["render",w],["__file","logical-reuse.html.vue"]]),P=JSON.parse('{"path":"/blogs/business/logical-reuse.html","title":"高效开发：业务逻辑复用沉淀","lang":"en-US","frontmatter":{"title":"高效开发：业务逻辑复用沉淀","date":"2024-12-10","categories":["业务文档"],"tags":["业务逻辑复用"],"author":"Alan","publish":true},"headers":[{"level":2,"title":"一、相关代码仓库说明","slug":"一、相关代码仓库说明","link":"#一、相关代码仓库说明","children":[]},{"level":2,"title":"二、APP 客户端跳转微信小程序","slug":"二、app-客户端跳转微信小程序","link":"#二、app-客户端跳转微信小程序","children":[]},{"level":2,"title":"二、APP 客户端跳转微信小程序，访问 H5 页面","slug":"二、app-客户端跳转微信小程序-访问-h5-页面","link":"#二、app-客户端跳转微信小程序-访问-h5-页面","children":[]},{"level":2,"title":"三、H5 页面纯图片展示临时通知信息","slug":"三、h5-页面纯图片展示临时通知信息","link":"#三、h5-页面纯图片展示临时通知信息","children":[]},{"level":2,"title":"四、OSS：图片资源管理","slug":"四、oss-图片资源管理","link":"#四、oss-图片资源管理","children":[]},{"level":2,"title":"...","slug":"","link":"#","children":[]}],"git":{"createdTime":1754455154000,"updatedTime":1754459054000,"contributors":[{"name":"yanhui","email":"yhalxh@163.com","commits":3}]},"filePathRelative":"blogs/business/logical-reuse.md"}');export{y as comp,P as data};
